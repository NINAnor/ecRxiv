---
title: "Anthropogenic disturbance to soils and vegetation"
subtitle: |
  [NO_SLIT_001] (mountains) \
  [NO_SLIT_002] (wetlands) \
  [NO_SLIT_003] (forests) \
  [NO_SLIT_004] (farmland and open lowland)
format: 
  html:
    embed-resources: true
    code-fold: true
    toc: true
    toc-title: Contents
    toc-depth: 3
    smooth-scroll: true
execute: 
  cache: true
author:
  - name: Joachim Töpper
    email: joachim.topper@nina.no
    affiliations:
      - id: myID
        name: Norwegian Institute for Nature Research
  - name: Erik Framstad
    affiliations:
      - ref: myID               # To reuse affiliations referecen the id like this
date: April 9, 2025 # Enter date 
callout-icon: false
lightbox: true
css: ../../../style.css
code-links:
      - text: Add a review
        icon: github
        href: https://github.com/NINAnor/ecRxiv
---

<!--# This is a template for how to document the indicator analyses. Make sure also to not change the order, or modify, the headers, unless you really need to. This is because it easier to read if all the indicators are presented using the same layout. If there is one header where you don't have anything to write, just leave the header as is, and don't write anything below it. If you are providing code, be careful to annotate and comment on every step in the analysis. Before starting it is recommended to fill in as much as you can in the metadata file. This file will populate the initial table in your output.-->

<!--# Load all you dependencies here -->

```{r setup}
#| include: false
library(knitr)
library(kableExtra)
library(here)
library(sf)
library(readxl)
library(plyr)
library(RColorBrewer)
library("gridExtra") 
library(ggridges)
library(tmap)
library(tmaptools)
library(raster)
library(stars)
library(betareg)
library(glmmTMB)
library(flextable)
library(conflicted)
library(tidyverse)
conflict_prefer_all("dplyr")
knitr::opts_chunk$set(echo = TRUE)
```

```{r source}
#| echo: false
source(here::here("_common.R"))
```

```{r}
#| echo: false
meta <- readxl::read_xlsx("../metadata.xlsx")
st <- meta |>
  filter(Variable == "status") |>
  pull(Value)
version <- meta |>
  filter(Variable == "Version") |>
  pull(Value)
auth <- meta |>
  filter(Variable == "authors") |>
  pull(Value)
year <- meta |>
  filter(Variable == "yearAdded") |>
  pull(Value)
id <- meta |>
  filter(Variable == "indicatorID") |>
  pull(Value)
name <- meta |>
  filter(Variable == "indicatorName") |>
  pull(Value)
url <- meta |>
  filter(Variable == "url") |>
  pull(Value)

meta <- meta |>
  mutate(Variable = case_match(Variable,
    "indicatorID" ~ "Indicator ID" ,
    "indicatorName" ~ "Indicator Name",
    "country" ~ "Country",
    "continent" ~ "Continent",
    "ECT" ~ "Ecosystem Condition Typology Class",
    "yearAdded" ~ "Year added",
    "yearLastUpdate" ~ "Last update",
    .default = Variable
   )
  ) |>
  filter(Variable != "authors")

```

<!--# The following parts are autogenerated. Do not edit. -->

```{r}
#| echo: false
#| results: asis
status(st)
```

::: {layout-ncol="2"}



> **Recomended citation**: `r paste(auth, " ", year, ". ", name, " (ID: ", id, ") ", "v. ", version, ". ecRxiv: https://view.nina.no/ecRxiv/", sep="")`

> **Version**: `r version`

:::

```{=html}
<details>
<summary>Show metadata</summary>
```

```{r tbl-meta}
#| tbl-cap: 'Indicator metadata'
#| echo: false
#| warning: false

meta |>
  select(Variable, Value) |>
  kbl(col.names = NULL) 

```

```{=html}
</details>
```

::: {.callout-tip collapse="true"}

## Logg

<!--# Update this logg with short messages for each update -->
- 09 Apr. 2025 - Original PR
:::


<hr />

<!--# Document you work below.  -->

## 1. Summary

The 'Anthropogenic disturbance to soils and vegetation' indicator describes to what degree an ecosystem is affected by human-caused disturbances, mainly linked to erosion from vehicles or damage from intensive human use, based on the 'slitasje' variable registered in ANO monitoring sites. The indicator is one-sided as a lack of this kind of anthropogenic disturbance obviously is not a problem. The reference condition is defined as an ecosystem without any anthropogenic disturbance (applies to all types of ecosystems and all regions), and thus the reference threshold for scaling is set to 0 disturbanceat a site. The scaling thresholds for the limit value between good and reduced ecological condition as well as the minimum value are set on an expert-judgement basis: less than 95% area without alien plant species represents the limit threshold, and 0% area without alien plant species represents the minimum threshold beyond which the ecosystem for sure has transformed into something else (see also Framstad et al. 2022 for implementations of this indicator in previous condition assessments for Norwegian forest and mountain ecosystems).

The 'Anthropogenic disturbance to soils and vegetation' indicator describes to what degree an ecosystem is affected by human-caused disturbances, mainly linked to erosion from vehicles or damage from intensive human use, based on the 'slitasje' variable registered in ANO monitoring sites. The indicator is one-sided as a lack of alien species obviously is not a problem. The reference condition is defined as an ecosystem without any alien plant species (applies to all types of ecosystems and all regions), and thus the reference threshold for scaling is set to 100% of the monitoring site area without alien plant species. The reference level X~60~, i.e. the threshold between good and reduced ecological condition, as well as X~0~, are set on an expert-judgement basis: less than 95% area without alien plant species represents good condition, and 0% area without alien plant species represents X~0~ where the ecosystem for sure has transformed into something else (see also Framstad et al. 2022 for implementations of this indicator in previous condition assessments for Norwegian forest and mountain ecosystems).

## 2. About the underlying data

Here, we evaluate the 'Anthropogenic disturbance to soils and vegetation' indicator based on field sampled plant community data from the Norwegian nature monitoring program ANO (Tingstad et al. 2019).

### 2.1 Spatial and temporal resolution and extent

The ANO monitoring data available now represent one cycle of sampling from 2019-2024 comprising ca. 1000 sites across Norway.
ANO has no defined end date. 2025 is the first year of repeated sampling for about 20% of the approximately 1000 ANO sites for all of mainland Norway (i.e. the Ecosystem Accounting Area). Annual sampling is spatially representative, in principle allowing to compute area-representative estimates for single years but also 3-yr-reporting periods.

### 2.2 Original units

Abundance data for alien plant species in ANO is given as % cover within a 250 m^2^ sample circle following the national alien species list (Artsdatabanken 2023).

### 2.3 Additional comments about the dataset

<!--# Text here -->

#### 2.3.1 Instructions for citing, using and accessing data

<!--# Is the data openly available? If not, how can one access it? What are the key references to the datasets?   -->


## 3. Indicator properties

### 3.1 Ecosystem Condition Typology Class (ECT)

The 'area without alien plant species' indicator reflect the plant species composition and thus represent ECT class 'B1 Biotic compositional characteristics'.

### 3.2 Ecosystem condition characteristic

The 'area without alien plant species' indicator addresses both the ecosystem characteristic 'functionally important species and biophysical structures' and 'biological diversity' in the Norwegian framework for ecological condition. The indicator has been linked solely to the former in the previous assessments of ecological condition in forest and mountain ecosystems.

### 3.3 Other standards

None.

### 3.4 Collinearities with other indicators

None.

### 3.5 Impact factors

The main impact factor for this indicator is the introduction of alien species. In addition, the spreading of introduced alien species can be enforced by climate change if it relaxes climatic limitation on them.

## 4. Reference condition and levels

### 4.1 Reference condition

The reference condition is defined as an ecosystem without any alien plant species.

### 4.2 Reference levels

The reference threshold for scaling is set to 100% of the monitoring site area without alien plant species. The scaling thresholds for the limit value between good and reduced ecological condition as well as the minimum value are set on an expert-judgement basis: less than 95% area without alien plant species represents the limit threshold, and 0% area without alien plant species represents the minimum threshold beyond which the ecosystem for sure has transformed into something else (see also Framstad et al. 2022 for implementations of this indicator in previous condition assessments for Norwegian forest and mountain ecosystems).

#### 4.2.1 Spatial resolution and validity

Both reference condition and threshold values apply to all types of ecosystems and all regions.

## 5. Uncertainties

Uncertainties relate partly to sampling and observer variability (and possible observer bias) in the recording of the plant cover data. 
Spatial variability as a source of uncertainty can be quantified. For every mean or median indicator value (after scaling) for every region (or any other delimited area of interest) we can calculate its corresponding standard error or confidence interval quantiles as a measure of spatial uncertainty for a geographical area.

## 6. References

Artsdatabanken (2023, 11. august). Fremmede arter i Norge - med økologisk risiko 2023. http://www.artsdatabanken.no/lister/fremmedartslista/2023.

Framstad, E., Kolstad, A. L., Nybø, S., Töpper, J. & Vandvik, V. 2022. The condition of forest and mountain ecosystems in Norway. Assessment by the IBECA method. NINA Report 2100. Norwegian Institute for Nature Research.

Tingstad, L., Evju, M., Sickel, H., & Töpper, J. 2019. Utvikling av nasjonal arealrepresentativ naturovervåking (ANO). Forslag til gjennomføring, protokoller og kostnadsvurderinger med utgangspunkt i erfaringer fra uttesting i Trøndelag. NINA Rapport 1642.


## 7. Datasets

### 7.1 ANO monitoring data

ANO stands for areal-representativ naturovervåking, i.e. area representative nature monitoring. 1000 sites are randomly distributed across mainland Norway and visited within a 5-year cycle. Each ANO site spans a 500 x 500 m grid cell, and the data collection at each ANO site includes up to 12 evenly distributed 250 sqm monitoring circles (up to 12, because some of these evenly distributed points may be in water or otherwise inaccessible). The cover of each alien plant species in the circle is recorded, in addition to the ecosystem the circle lies in, including ecosystem type and some additional variables related to ecosystem-specific drivers of state. In the analyses described in this document, we use the data available on Miljødirektoratets kartkatalog (https://kartkatalog.miljodirektoratet.no/Dataset/Details/2054), which comprises data from the first round of data collection in ANO, 2019-2024, and a total of 18 871 circles in 1052 sites.
The timeframe of six years from 2019-2024 allows to create indicator values for the two 3-year reporting periods 2019-2021 and 2022-2024.

## 8. Spatial units

The spatial units for the 'area without alien plant species' indicator are governed by the ANO data, which consist of 1000 randomly chosen sites in Norway. Each site is a 500 x 500 m grid cell with 18 monitoring circles of 250sqm and a central 1 x 1 m vegetation plot. The basic unit for which observational alien plant species abundance data exist, and for which every the 'area without alien plant species' indicator is computed, is the 250sqm circle. Aggregation of these basic spatial units to higher ones - like sites, municipalities, counties, regions, or the national level - should be done with appropriate consideration of the spatial structure of the data, i.e. imbalances and clustering (highly unequal number of points of an ecosystem type between sites).

## 9. Analyses

Import ANO testing data:
First, download from from Miljødirektoratet...
```{r, eval = F, echo = F}
# download 
url <- "https://nedlasting.miljodirektoratet.no/naturovervaking/naturovervaking_eksport.gdb.zip"
download(url, dest="P:/41201785_okologisk_tilstand_2022_2023/data/ANO/naturovervaking_eksport.gdb.zip", mode="wb") 
unzip("P:/41201785_okologisk_tilstand_2022_2023/data/ANO/naturovervaking_eksport.gdb.zip", exdir = "P:/41201785_okologisk_tilstand_2022_2023/data/ANO/naturovervaking_eksport.gdb")
```

...then upload from local storage
```{r}
#Sys.setlocale("LC_ALL", "no_NB.utf8") #works with æøå or use "Norwegian"
#ANO.sp <- st_read("P:/41201785_okologisk_tilstand_2022_2023/data/ANO/naturovervaking_eksport.gdb",layer="ANO_Art", quiet = T)
ANO.geo <- st_read("P:/41201785_okologisk_tilstand_2022_2023/data/ANO/naturovervaking_eksport.gdb",
                   layer="ANO_SurveyPoint", quiet = T)
#head(ANO.sp)
#head(ANO.geo)

```

#### Data handling

```{r, include = T, results='hide', warning=F, message=F}

#### ANO monitoring data

#head(ANO.geo)

## fix NiN information
ANO.geo$hovedtype_rute <- substr(ANO.geo$kartleggingsenhet_1m2,1,3) # take the 3 first characters
ANO.geo$hovedtype_rute <- gsub("-", "", ANO.geo$hovedtype_rute) # remove hyphen
unique(as.factor(ANO.geo$hovedtype_rute))

ANO.geo$hovedoekosystem_rute <- ANO.geo$hovedtype_rute
ANO.geo <- ANO.geo %>% mutate(hovedoekosystem_rute = recode(hovedoekosystem_rute,
  "T4" = "Forest", "T30" = "Forest",
  "T3" = "Mountain", "T7" = "Mountain", "T14" = "Mountain", "T22" = "Mountain",
  "V1" = "Wetland", "V2" = "Wetland", "V3" = "Wetland", "V4" = "Wetland", "V5" = "Wetland", "V6" = "Wetland", "V7" = "Wetland", "V8" = "Wetland",
  "T31" = "Seminat", "T32" = "Seminat", "T33" = "Seminat", "T34" = "Seminat", "V9" = "Seminat", "V10" = "Seminat",
  "T2" = "Natopen", "T8" = "Natopen", "T11" = "Natopen", "T12" = "Natopen", "T13" = "Natopen", "T15" = "Natopen", "T16" = "Natopen", "T18" = "Natopen", "T21" = "Natopen", "T24" = "Natopen", "T29" = "Natopen"
))


## fix NiN-variables
colnames(ANO.geo)
colnames(ANO.geo)[41:46] <- c("groeftingsintensitet",
                              "bruksintensitet",
                              "beitetrykk",
                              "slatteintensitet",
                              "tungekjoretoy",
                              "slitasje")
#head(ANO.geo)

# remove variable code in the data
ANO.geo$tungekjoretoy <- gsub("7TK_", "", ANO.geo$tungekjoretoy) 
unique(ANO.geo$tungekjoretoy)
ANO.geo$tungekjoretoy <- gsub("X", "NA", ANO.geo$tungekjoretoy)
unique(ANO.geo$tungekjoretoy)
ANO.geo$tungekjoretoy <- as.numeric(ANO.geo$tungekjoretoy)
unique(ANO.geo$tungekjoretoy)

ANO.geo$slitasje <- gsub("7SE_", "", ANO.geo$slitasje) 
unique(ANO.geo$slitasje)
ANO.geo$slitasje <- gsub("X", "NA", ANO.geo$slitasje)
unique(ANO.geo$slitasje)
ANO.geo$slitasje <- as.numeric(ANO.geo$slitasje)
unique(ANO.geo$slitasje)


## check that every point is present only once
#length(levels(as.factor(ANO.geo$ano_flate_id)))
#length(levels(as.factor(ANO.geo$ano_punkt_id)))
#summary(as.factor(ANO.geo$ano_punkt_id))
# there's many double presences, probably some wrong registrations of point numbers,


```

Next we create a normalisation function for mapping the abundance values to indicator values.
```{r}

#### scaled values ####
r.s <- 1    # reference value
l.s <- 0.6  # limit value
a.s <- 0    # abscence of indicator, or indicator at maximum

#### function for calculating scaled values for measured value ####

## scaling function including truncation
scal <- function() {
  # place to hold the result
   x <- numeric()
  if (maxmin < ref) {
    # values >= the reference value equal 1
    if (val >= ref) {x <- 1}
    # values < the reference value and >= the limit value can be deducted from the linear relationship between these two
    if (val < ref & val >= lim) {x <- (l.s + (val-lim) * ( (r.s-l.s) / (ref-lim) ) )}
    # values < the limit value and > maxmin can be deducted from the linear relationship between these two
    if (val < lim & val > maxmin) {x <- (a.s + (val-maxmin) * ( (l.s-a.s) / (lim-maxmin) ) )}
    # value equals or lower than maxmin
    if (val <= maxmin) {x <-0}
  } else {
    # values <= the reference value equal 1
    if (val <= ref) {x <- 1}
    # values > the reference value and <= the limit value can be deducted from the linear relationship between these two
    if (val > ref & val <= lim) {x <- ( r.s - ( (r.s - l.s) * (val - ref) / (lim - ref) ) )}
    # values > the limit value and < maxmin can be deducted from the linear relationship between these two
    if (val > lim) {x <- ( l.s - (l.s * (val - lim) / (maxmin - lim) ) )}
    # value equals or larger than maxmin
    if (val >= maxmin) {x <-0}
  }
  return(x)
  
}

## function for calculating scaled values for measured value, without truncation
scal.2 <- function() {
  # place to hold the result
  x <- numeric()
  if (maxmin < ref) {
    # values >= the reference value estimated from the linear relationship for lim < x < ref (line below)
    if (val >= ref) {x <- (l.s + (val-lim) * ( (r.s-l.s) / (ref-lim) ) )}
    # values < the reference value and >= the limit value can be deducted from the linear relationship between these two
    if (val < ref & val >= lim) {x <- (l.s + (val-lim) * ( (r.s-l.s) / (ref-lim) ) )}
    # values < the limit value and > maxmin can be deducted from the linear relationship between these two
    if (val < lim & val > maxmin) {x <- (a.s + (val-maxmin) * ( (l.s-a.s) / (lim-maxmin) ) )}
    # value equal or lower than maxmin
    if (val <= maxmin) {x <-0}
  } else {
    # values <= the reference value estimated from the linear relationship for lim < x < ref (line below)
    if (val <= ref) {x <- ( r.s - ( (r.s - l.s) * (val - ref) / (lim - ref) ) )}
    # values > the reference value and <= the limit value can be deducted from the linear relationship between these two
    if (val > ref & val <= lim) {x <- ( r.s - ( (r.s - l.s) * (val - ref) / (lim - ref) ) )}
    # values > the limit value and < maxmin can be deducted from the linear relationship between these two
    if (val > lim & val < maxmin) {x <- ( l.s - (l.s * (val - lim) / (maxmin - lim) ) )}
    # value equal og larger than maxmin
    if (val >= maxmin) {x <-0}
  }
  return(x)
  
}


```

We then can prepare a list of data frames to hold the results and perform the scaling according to the principles described in NINA report 1967 (Töpper and Jakobsson 2021).
```{r, results='hide'}

# Wetlands
ANO.flate.wetland <- ANO.geo %>%
  filter(hovedoekosystem_250m2=='vaatmark') %>%
  group_by(ano_flate_id) %>%
  summarise_at(vars(tungekjoretoy, slitasje),
             list(mean = mean))
ANO.flate.wetland$tungekjoretoy_index <- NA
ANO.flate.wetland$slitasje_index <- NA

# calculating scaled values for the indicators based on the dataset
for (i in 1:nrow(ANO.flate.wetland) ) {
  tryCatch({
    print(i)
    print(paste(ANO.flate.wetland$ano_flate_id[i]))

    # scaling thresholds
    ref <- 0
    lim <- 1
    maxmin <- 3
    
    # Disturbance evaluation for tungekjoretoy
    val <- ANO.flate.wetland$tungekjoretoy_mean[i]
    if ( !is.na(val) ) {
      # coercing x into results.ANO dataframe
      ANO.flate.wetland[i,'tungekjoretoy_index'] <- scal()
    }
    
    # Disturbance evaluation for slitasje
    val <- ANO.flate.wetland$slitasje_mean[i]    
    if ( !is.na(val) ) {
      # coercing x into results.ANO dataframe
      ANO.flate.wetland[i,'slitasje_index'] <- scal() 
    }

  }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

# naturally open systems below the tree line
ANO.flate.natopen <- ANO.geo %>%
  filter(hovedoekosystem_250m2=='naturlig_apne') %>%
  group_by(ano_flate_id) %>%
  summarise_at(vars(tungekjoretoy, slitasje),
               list(mean = mean))
ANO.flate.natopen$tungekjoretoy_index <- NA
ANO.flate.natopen$slitasje_index <- NA

# calculating scaled values for the indicators based on the dataset
for (i in 1:nrow(ANO.flate.natopen) ) {
  tryCatch({
    print(i)
    print(paste(ANO.flate.natopen$ano_flate_id[i]))
    
    # scaling thresholds
    ref <- 0
    lim <- 1
    maxmin <- 3
    
    # Disturbance evaluation for tungekjoretoy
    val <- ANO.flate.natopen$tungekjoretoy_mean[i]
    if ( !is.na(val) ) {
      # coercing x into results.ANO dataframe
      ANO.flate.natopen[i,'tungekjoretoy_index'] <- scal()
    }
    
    # Disturbance evaluation for slitasje
    val <- ANO.flate.natopen$slitasje_mean[i]    
    if ( !is.na(val) ) {
      # coercing x into results.ANO dataframe
      ANO.flate.natopen[i,'slitasje_index'] <- scal() 
    }
    
  }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

# semi-natural systems
ANO.flate.seminat <- ANO.geo %>%
  filter(hovedoekosystem_250m2=='semi_naturlig_mark') %>%
  group_by(ano_flate_id) %>%
  summarise_at(vars(tungekjoretoy, slitasje),
               list(mean = mean))
ANO.flate.seminat$tungekjoretoy_index <- NA
ANO.flate.seminat$slitasje_index <- NA

# calculating scaled values for the indicators based on the dataset
for (i in 1:nrow(ANO.flate.seminat) ) {
  tryCatch({
    print(i)
    print(paste(ANO.flate.seminat$ano_flate_id[i]))
    
    # scaling thresholds
    ref <- 0
    lim <- 1
    maxmin <- 3
    
    # Disturbance evaluation for tungekjoretoy
    val <- ANO.flate.seminat$tungekjoretoy_mean[i]
    if ( !is.na(val) ) {
      # coercing x into results.ANO dataframe
      ANO.flate.seminat[i,'tungekjoretoy_index'] <- scal()
    }
    
    # Disturbance evaluation for slitasje
    val <- ANO.flate.seminat$slitasje_mean[i]    
    if ( !is.na(val) ) {
      # coercing x into results.ANO dataframe
      ANO.flate.seminat[i,'slitasje_index'] <- scal() 
    }
    
  }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}


# alpine/arctic
ANO.flate.mount <- ANO.geo %>%
  filter(hovedoekosystem_250m2 %in% c('fjell','arktisk_tundra')) %>%
  group_by(ano_flate_id) %>%
  summarise_at(vars(tungekjoretoy, slitasje),
               list(mean = mean))
ANO.flate.mount$tungekjoretoy_index <- NA
ANO.flate.mount$slitasje_index <- NA

# calculating scaled values for the indicators based on the dataset
for (i in 1:nrow(ANO.flate.mount) ) {
  tryCatch({
    print(i)
    print(paste(ANO.flate.mount$ano_flate_id[i]))
    
    # scaling thresholds
    ref <- 0
    lim <- 1
    maxmin <- 3
    
    # Disturbance evaluation for tungekjoretoy
    val <- ANO.flate.mount$tungekjoretoy_mean[i]
    if ( !is.na(val) ) {
      # coercing x into results.ANO dataframe
      ANO.flate.mount[i,'tungekjoretoy_index'] <- scal()
    }
    
    # Disturbance evaluation for slitasje
    val <- ANO.flate.mount$slitasje_mean[i]    
    if ( !is.na(val) ) {
      # coercing x into results.ANO dataframe
      ANO.flate.mount[i,'slitasje_index'] <- scal() 
    }
    
  }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}

# Forests
ANO.flate.forest <- ANO.geo %>%
  filter(hovedoekosystem_250m2=='skog') %>%
  group_by(ano_flate_id) %>%
  summarise_at(vars(tungekjoretoy, slitasje),
               list(mean = mean))
ANO.flate.forest$tungekjoretoy_index <- NA
ANO.flate.forest$slitasje_index <- NA

# calculating scaled values for the indicators based on the dataset
for (i in 1:nrow(ANO.flate.forest) ) {
  tryCatch({
    print(i)
    print(paste(ANO.flate.forest$ano_flate_id[i]))
    
    # scaling thresholds
    ref <- 0
    lim <- 1
    maxmin <- 3
    
    # Disturbance evaluation for tungekjoretoy
    val <- ANO.flate.forest$tungekjoretoy_mean[i]
    if ( !is.na(val) ) {
      # coercing x into results.ANO dataframe
      ANO.flate.forest[i,'tungekjoretoy_index'] <- scal()
    }
    
    # Disturbance evaluation for slitasje
    val <- ANO.flate.forest$slitasje_mean[i]    
    if ( !is.na(val) ) {
      # coercing x into results.ANO dataframe
      ANO.flate.forest[i,'slitasje_index'] <- scal() 
    }
    
  }, error=function(e){cat("ERROR :",conditionMessage(e), "\n")})
}


```

#### Scaled value analyses

In order to calculate regional indices for the indicator(s) in addition to national ones we need to add information on region to the results-object.
```{r, message = F, echo = T, warning = F}
#### preparing results data for calculating of indices ####
## continuing with 2-sided
res.ANO.alien <- results.ANO.alien[['scaled']]

# add geometry again
st_geometry(res.ANO.alien) <- st_geometry(ANO.geo)

nor <- st_read(here::here("indicators/NO_ALIE_002-005/data/outlineOfNorway_EPSG25833.shp"),
               quiet = T)%>%
  st_as_sf() %>%
  st_transform(crs = crs(ANO.geo))

reg <- st_read(here::here("indicators/NO_ALIE_002-005/data/regions.shp"),
               quiet = T) %>%
  st_as_sf() %>%
  st_transform(crs = crs(ANO.geo))

# change region names to something R-friendly
# reg$region
reg$region <- c("Northern.Norway","Central.Norway","Eastern.Norway","Western.Norway","Southern.Norway")

regnor <- st_intersection(reg,nor)

res.ANO.alien = st_join(res.ANO.alien, regnor, left = TRUE)

```

### Calculating national and regional indices

<<<<<<< HEAD
We can calculate national and region-wise medians and 0.25 and 0.75 quantiles. Calculating means is not recommended since these data do not follow a Gaussian distribution. The national and regional estimates are computed separately (i.e. regional estimates are not spatially aggregated)

```{r}
## forest ecosystems
# list to hold the results
NO_ALIE_004_2022to2024 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)
NO_ALIE_004_2019to2021 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)  
  
# calculation of the median and quantiles
# Norway 2022-2024
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='skog' | res.ANO.alien$hovedoekosystem_rute=='Forest') & res.ANO.alien$aar %in% c(2022, 2023, 2024) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_004_2022to2024$low[1] <- res[1]
NO_ALIE_004_2022to2024$median[1] <- res[2]
NO_ALIE_004_2022to2024$high[1] <- res[3]
NO_ALIE_004_2022to2024$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2022-2024
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='skog' | res.ANO.alien$hovedoekosystem_rute=='Forest') & res.ANO.alien$aar %in% c(2022, 2023, 2024) & res.ANO.alien$region==NO_ALIE_004_2022to2024$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_004_2022to2024$low[i] <- res[1]
NO_ALIE_004_2022to2024$median[i] <- res[2]
NO_ALIE_004_2022to2024$high[i] <- res[3]
NO_ALIE_004_2022to2024$n[i] <- nrow(df[!is.na(df$alien),])
}
# Norway 2019-2021
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='skog' | res.ANO.alien$hovedoekosystem_rute=='Forest') & res.ANO.alien$aar %in% c(2019, 2020, 2021) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_004_2019to2021$low[1] <- res[1]
NO_ALIE_004_2019to2021$median[1] <- res[2]
NO_ALIE_004_2019to2021$high[1] <- res[3]
NO_ALIE_004_2019to2021$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2019-2021
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='skog' | res.ANO.alien$hovedoekosystem_rute=='Forest') & res.ANO.alien$aar %in% c(2019, 2020, 2021) & res.ANO.alien$region==NO_ALIE_004_2019to2021$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_004_2019to2021$low[i] <- res[1]
NO_ALIE_004_2019to2021$median[i] <- res[2]
NO_ALIE_004_2019to2021$high[i] <- res[3]
NO_ALIE_004_2019to2021$n[i] <- nrow(df[!is.na(df$alien),])
}


## mountain ecosystems
# list to hold the results
NO_ALIE_002_2022to2024 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)
NO_ALIE_002_2019to2021 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)  
  
# calculation of the median and quantiles
# Norway 2022-2024
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='fjell' | res.ANO.alien$hovedoekosystem_rute=='Mountain') & res.ANO.alien$aar %in% c(2022, 2023, 2024) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_002_2022to2024$low[1] <- res[1]
NO_ALIE_002_2022to2024$median[1] <- res[2]
NO_ALIE_002_2022to2024$high[1] <- res[3]
NO_ALIE_002_2022to2024$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2022-2024
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='fjell' | res.ANO.alien$hovedoekosystem_rute=='Mountain') & res.ANO.alien$aar %in% c(2022, 2023, 2024) & res.ANO.alien$region==NO_ALIE_002_2022to2024$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_002_2022to2024$low[i] <- res[1]
NO_ALIE_002_2022to2024$median[i] <- res[2]
NO_ALIE_002_2022to2024$high[i] <- res[3]
NO_ALIE_002_2022to2024$n[i] <- nrow(df[!is.na(df$alien),])
}
# Norway 2019-2021
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='fjell' | res.ANO.alien$hovedoekosystem_rute=='Mountain') & res.ANO.alien$aar %in% c(2019, 2020, 2021) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_002_2019to2021$low[1] <- res[1]
NO_ALIE_002_2019to2021$median[1] <- res[2]
NO_ALIE_002_2019to2021$high[1] <- res[3]
NO_ALIE_002_2019to2021$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2019-2021
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='fjell' | res.ANO.alien$hovedoekosystem_rute=='Mountain') & res.ANO.alien$aar %in% c(2019, 2020, 2021) & res.ANO.alien$region==NO_ALIE_002_2019to2021$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_002_2019to2021$low[i] <- res[1]
NO_ALIE_002_2019to2021$median[i] <- res[2]
NO_ALIE_002_2019to2021$high[i] <- res[3]
NO_ALIE_002_2019to2021$n[i] <- nrow(df[!is.na(df$alien),])
}

## wetland ecosystems
# list to hold the results
NO_ALIE_003_2022to2024 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)
NO_ALIE_003_2019to2021 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)  
  
# calculation of the median and quantiles
# Norway 2022-2024
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='vaatmark' | res.ANO.alien$hovedoekosystem_rute=='Wetland') & res.ANO.alien$aar %in% c(2022, 2023, 2024) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_003_2022to2024$low[1] <- res[1]
NO_ALIE_003_2022to2024$median[1] <- res[2]
NO_ALIE_003_2022to2024$high[1] <- res[3]
NO_ALIE_003_2022to2024$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2022-2024
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='vaatmark' | res.ANO.alien$hovedoekosystem_rute=='Wetland') & res.ANO.alien$aar %in% c(2022, 2023, 2024) & res.ANO.alien$region==NO_ALIE_003_2022to2024$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_003_2022to2024$low[i] <- res[1]
NO_ALIE_003_2022to2024$median[i] <- res[2]
NO_ALIE_003_2022to2024$high[i] <- res[3]
NO_ALIE_003_2022to2024$n[i] <- nrow(df[!is.na(df$alien),])
}
# Norway 2019-2021
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='vaatmark' | res.ANO.alien$hovedoekosystem_rute=='Wetland') & res.ANO.alien$aar %in% c(2019, 2020, 2021) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_003_2019to2021$low[1] <- res[1]
NO_ALIE_003_2019to2021$median[1] <- res[2]
NO_ALIE_003_2019to2021$high[1] <- res[3]
NO_ALIE_003_2019to2021$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2019-2021
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2=='vaatmark' | res.ANO.alien$hovedoekosystem_rute=='Wetland') & res.ANO.alien$aar %in% c(2019, 2020, 2021) & res.ANO.alien$region==NO_ALIE_003_2019to2021$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_003_2019to2021$low[i] <- res[1]
NO_ALIE_003_2019to2021$median[i] <- res[2]
NO_ALIE_003_2019to2021$high[i] <- res[3]
NO_ALIE_003_2019to2021$n[i] <- nrow(df[!is.na(df$alien),])
}


## open lowland ecosystems
# list to hold the results
NO_ALIE_005_2022to2024 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)
NO_ALIE_005_2019to2021 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)  
  
# calculation of the median and quantiles
# Norway 2022-2024
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("naturlig_apne","semi_naturlig_mark") | res.ANO.alien$hovedoekosystem_rute %in% c("Seminat","Natopen") | res.ANO.alien$hovedtype_rute %in% c('T40','T41')) & res.ANO.alien$aar %in% c(2022, 2023, 2024) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005_2022to2024$low[1] <- res[1]
NO_ALIE_005_2022to2024$median[1] <- res[2]
NO_ALIE_005_2022to2024$high[1] <- res[3]
NO_ALIE_005_2022to2024$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2022-2024
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("naturlig_apne","semi_naturlig_mark") | res.ANO.alien$hovedoekosystem_rute %in% c("Seminat","Natopen") | res.ANO.alien$hovedtype_rute %in% c('T40','T41')) & res.ANO.alien$aar %in% c(2022, 2023, 2024) & res.ANO.alien$region==NO_ALIE_005_2022to2024$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005_2022to2024$low[i] <- res[1]
NO_ALIE_005_2022to2024$median[i] <- res[2]
NO_ALIE_005_2022to2024$high[i] <- res[3]
NO_ALIE_005_2022to2024$n[i] <- nrow(df[!is.na(df$alien),])
}
# Norway 2019-2021
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("naturlig_apne","semi_naturlig_mark") | res.ANO.alien$hovedoekosystem_rute %in% c("Seminat","Natopen") | res.ANO.alien$hovedtype_rute %in% c('T40','T41')) & res.ANO.alien$aar %in% c(2019, 2020, 2021) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005_2019to2021$low[1] <- res[1]
NO_ALIE_005_2019to2021$median[1] <- res[2]
NO_ALIE_005_2019to2021$high[1] <- res[3]
NO_ALIE_005_2019to2021$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2019-2021
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("naturlig_apne","semi_naturlig_mark") | res.ANO.alien$hovedoekosystem_rute %in% c("Seminat","Natopen") | res.ANO.alien$hovedtype_rute %in% c('T40','T41')) & res.ANO.alien$aar %in% c(2019, 2020, 2021) & res.ANO.alien$region==NO_ALIE_005_2019to2021$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005_2019to2021$low[i] <- res[1]
NO_ALIE_005_2019to2021$median[i] <- res[2]
NO_ALIE_005_2019to2021$high[i] <- res[3]
NO_ALIE_005_2019to2021$n[i] <- nrow(df[!is.na(df$alien),])
}


## naturally open lowland ecosystems
# list to hold the results
NO_ALIE_005a_2022to2024 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)
NO_ALIE_005a_2019to2021 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)  
  
# calculation of the median and quantiles
# Norway 2022-2024
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("naturlig_apne") | res.ANO.alien$hovedoekosystem_rute %in% c("Natopen")) & res.ANO.alien$aar %in% c(2022, 2023, 2024) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005a_2022to2024$low[1] <- res[1]
NO_ALIE_005a_2022to2024$median[1] <- res[2]
NO_ALIE_005a_2022to2024$high[1] <- res[3]
NO_ALIE_005a_2022to2024$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2022-2024
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("naturlig_apne") | res.ANO.alien$hovedoekosystem_rute %in% c("Natopen")) & res.ANO.alien$aar %in% c(2022, 2023, 2024) & res.ANO.alien$region==NO_ALIE_005a_2022to2024$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005a_2022to2024$low[i] <- res[1]
NO_ALIE_005a_2022to2024$median[i] <- res[2]
NO_ALIE_005a_2022to2024$high[i] <- res[3]
NO_ALIE_005a_2022to2024$n[i] <- nrow(df[!is.na(df$alien),])
}
# Norway 2019-2021
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("naturlig_apne") | res.ANO.alien$hovedoekosystem_rute %in% c("Natopen")) & res.ANO.alien$aar %in% c(2019, 2020, 2021) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005a_2019to2021$low[1] <- res[1]
NO_ALIE_005a_2019to2021$median[1] <- res[2]
NO_ALIE_005a_2019to2021$high[1] <- res[3]
NO_ALIE_005a_2019to2021$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2019-2021
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("naturlig_apne") | res.ANO.alien$hovedoekosystem_rute %in% c("Natopen")) & res.ANO.alien$aar %in% c(2019, 2020, 2021) & res.ANO.alien$region==NO_ALIE_005a_2019to2021$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005a_2019to2021$low[i] <- res[1]
NO_ALIE_005a_2019to2021$median[i] <- res[2]
NO_ALIE_005a_2019to2021$high[i] <- res[3]
NO_ALIE_005a_2019to2021$n[i] <- nrow(df[!is.na(df$alien),])
}


## semi-natural ecosystems
# list to hold the results
NO_ALIE_005b_2022to2024 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)
NO_ALIE_005b_2019to2021 <- data.frame(Indicator="alien",
                                     region=c("Norway", "Northern.Norway", "Central.Norway", "Western.Norway", "Eastern.Norway", "Southern.Norway"),
                                     median=NA,
                                     low=NA,
                                     high=NA,
                                     n=NA)  
  
# calculation of the median and quantiles
# Norway 2022-2024
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("semi_naturlig_mark") | res.ANO.alien$hovedoekosystem_rute %in% c("Seminat") | res.ANO.alien$hovedtype_rute %in% c('T40','T41')) & res.ANO.alien$aar %in% c(2022, 2023, 2024) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005b_2022to2024$low[1] <- res[1]
NO_ALIE_005b_2022to2024$median[1] <- res[2]
NO_ALIE_005b_2022to2024$high[1] <- res[3]
NO_ALIE_005b_2022to2024$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2022-2024
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("semi_naturlig_mark") | res.ANO.alien$hovedoekosystem_rute %in% c("Seminat") | res.ANO.alien$hovedtype_rute %in% c('T40','T41')) & res.ANO.alien$aar %in% c(2022, 2023, 2024) & res.ANO.alien$region==NO_ALIE_005b_2022to2024$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005b_2022to2024$low[i] <- res[1]
NO_ALIE_005b_2022to2024$median[i] <- res[2]
NO_ALIE_005b_2022to2024$high[i] <- res[3]
NO_ALIE_005b_2022to2024$n[i] <- nrow(df[!is.na(df$alien),])
}
# Norway 2019-2021
df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("semi_naturlig_mark") | res.ANO.alien$hovedoekosystem_rute %in% c("Seminat") | res.ANO.alien$hovedtype_rute %in% c('T40','T41')) & res.ANO.alien$aar %in% c(2019, 2020, 2021) ,c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005b_2019to2021$low[1] <- res[1]
NO_ALIE_005b_2019to2021$median[1] <- res[2]
NO_ALIE_005b_2019to2021$high[1] <- res[3]
NO_ALIE_005b_2019to2021$n[1] <- nrow(df[!is.na(df$alien),])
# regions 2019-2021
for (i in 2:6) {
  df <- res.ANO.alien[(res.ANO.alien$hovedoekosystem_250m2  %in% c("naturlig_apne","semi_naturlig_mark") | res.ANO.alien$hovedoekosystem_rute %in% c("Seminat","Natopen") | res.ANO.alien$hovedtype_rute %in% c('T40','T41')) & res.ANO.alien$aar %in% c(2019, 2020, 2021) & res.ANO.alien$region==NO_ALIE_005b_2019to2021$region[i], c('ano_flate_id','region','hovedoekosystem_250m2','hovedoekosystem_rute','alien')]
res <-  quantile(df$alien,c(.25, .5, .75), na.rm=T)
NO_ALIE_005b_2019to2021$low[i] <- res[1]
NO_ALIE_005b_2019to2021$median[i] <- res[2]
NO_ALIE_005b_2019to2021$high[i] <- res[3]
NO_ALIE_005b_2019to2021$n[i] <- nrow(df[!is.na(df$alien),])
}


```

## 10. Results
The results are shown in @tbl-results.

```{r tbl-results}
#| tbl-cap: 'Indicator values for the indicator Area without alien plant species.'

### median indicator values for 'area without alien plant species', lower and upper prediction intervals (low, high), and number of observations (n)

# open lowland (natopen & seminat combined)
bind_rows(
  NO_ALIE_005_2022to2024 |> mutate(Indicator = "NO_ALIE_005", years = "2022-2024", ecosystem = "Open lowland"),
  NO_ALIE_005_2019to2021 |> mutate(Indicator = "NO_ALIE_005", years = "2019-2021", ecosystem = "Open lowland"),
# natopen
  NO_ALIE_005a_2022to2024 |> mutate(Indicator = "NO_ALIE_005a", years = "2022-2024", ecosystem = "Naturally open ecosystems"),
  NO_ALIE_005a_2019to2021 |> mutate(Indicator = "NO_ALIE_005a", years = "2019-2021", ecosystem = "Naturally open ecosystems"),
# seminat
  NO_ALIE_005b_2022to2024 |> mutate(Indicator = "NO_ALIE_005b", years = "2022-2024", ecosystem = "Semi-natural ecosystems"),
  NO_ALIE_005b_2019to2021 |> mutate(Indicator = "NO_ALIE_005b", years = "2019-2021", ecosystem = "Semi-natural ecosystems"),
# mountain ecosystems
  NO_ALIE_002_2022to2024 |> mutate(Indicator = "NO_ALIE_002", years = "2022-2024", ecosystem = "Mountains"),
  NO_ALIE_002_2019to2021 |> mutate(Indicator = "NO_ALIE_002", years = "2019-2021", ecosystem = "Mountains"),
# wetland ecosystems
  NO_ALIE_003_2022to2024 |> mutate(Indicator = "NO_ALIE_003", years = "2022-2024", ecosystem = "Wetlands"),
  NO_ALIE_003_2019to2021 |> mutate(Indicator = "NO_ALIE_003", years = "2019-2021", ecosystem = "Wetlands"),
# forest ecosystems
  NO_ALIE_004_2022to2024 |> mutate(Indicator = "NO_ALIE_004", years = "2022-2024", ecosystem = "Forest"),
  NO_ALIE_004_2019to2021 |> mutate(Indicator = "NO_ALIE_004", years = "2019-2021", ecosystem = "Forest")) |>
  kbl()
```


